#include <windows.h> #include <wininet.h> #include <fstream> #include <string> #include <iostream> #pragma comment(lib, "wininet.lib") void LogURL(const std::string& url) { std::ofstream logFile("url_log.txt", std::ios::app); if (logFile.is_open()) { logFile << url << std::endl; logFile.close(); } } void MonitorURLs() { HINTERNET hInternet = InternetOpen(L"URL Monitor", INTERNET_OPEN_TYPE_DIRECT, NULL, NULL, 0); if (hInternet) { HINTERNET hSession = InternetConnect(hInternet, L"www.example.com", INTERNET_DEFAULT_HTTP_PORT, NULL, NULL, INTERNET_SERVICE_HTTP, 0, 0); if (hSession) { HINTERNET hRequest = HttpOpenRequest(hSession, L"GET", NULL, NULL, NULL, NULL, 0, 0); if (hRequest) { if (HttpSendRequest(hRequest, NULL, 0, NULL, 0)) { char buffer[1024]; DWORD bytesRead; while (InternetReadFile(hRequest, buffer, sizeof(buffer) - 1, &bytesRead) && bytesRead) { buffer[bytesRead] = 0; std::string url(buffer); LogURL(url); } } InternetCloseHandle(hRequest); } InternetCloseHandle(hSession); } InternetCloseHandle(hInternet); } } int APIENTRY wWinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nCmdShow) { MonitorURLs(); return 0; }
